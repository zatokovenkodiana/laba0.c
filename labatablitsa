1 четная

2.
def calculate_expression1(D, B, C):
    return int(not (not (D*C or B*D)) or not ((D*B==D*C) or D*B) or B<=C)

def calculate_expression2(D, B, C):
    return int((D*C or not (C<=D*B)) or B or not ((D*C==C or B*C) <= B))

def print_truth_table1():
    print("D\tB\tC\tВыражение 1")
    for D in [0, 1]:
        for B in [0, 1]:
            for C in [0, 1]:
                F = calculate_expression1(D, B, C)
                print(f"{D}\t{B}\t{C}\t{F}")

def print_truth_table2():
    print("D\tB\tC\tВыражение 2")
    for D in [0, 1]:
        for B in [0, 1]:
            for C in [0, 1]:
                F = calculate_expression2(D, B, C)
                print(f"{D}\t{B}\t{C}\t{F}")

def get_SDNF(expression, truth_table):
    SDNF_terms = []
    for key, value in truth_table.items():
        if value == 1:
            term = "("
            if key[0] == 0:
                term += "¬D"
            else:
                term += "D"
            if key[1] == 0:
                term += "∨¬B"
            else:
                term += "∨B"
            if key[2] == 0:
                term += "∨¬C)"
            else:
                term += "∨C)"
            SDNF_terms.append(term)
    SDNF = "∧".join(SDNF_terms)
    print("\nСовершенная дизъюнктивная нормальная форма (СДНФ):")
    print(f"{expression} = {SDNF}")

truth_table1 = {}
for D in [0, 1]:
    for B in [0, 1]:
        for C in [0, 1]:
            F = calculate_expression1(D, B, C)
            truth_table1[(D, B, C)] = F

print_truth_table1()
get_SDNF("¬(DC∨BD))→¬(DB↔DC)∨DB→C", truth_table1)

truth_table2 = {}
for D in [0, 1]:
    for B in [0, 1]:
        for C in [0, 1]:
            F = calculate_expression2(D, B, C)
            truth_table2[(D, B, C)] = F

print_truth_table2()
get_SDNF("(DC∨¬(C→DB))B∨¬(DC↔C∨BC)→B", truth_table2)


3. 
truth_table2 = {}
for x in [0, 1]:
    for y in [0, 1]:
            F = x,y
            truth_table2[(x, y)] = F
def print_SKNF_tables():
    print("СКНФ для первой таблицы: A∨B")
    print("Вторая таблица соответствует логической операции A⊕B, СКНФ: (A∨B) ∧ (¬A∨¬B)")

print_SKNF_tables()

for key, value in():
    if value == 1:
        term = "("
        if key[0] == 0:
            term += "¬D"
        else:
            term += "D"
        if key[1] == 0:
            term += "∨¬B"
        else:
            term += "∨B"
        if key[2] == 0:
            term += "∨¬C)"
        else:
            term += "∨C)"
